#!venv/bin/python
import logging
import asyncio
import aiogram.utils.markdown as fmt
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
from ru_excuses import getRandomExcuse

bot = Bot(token="****")
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)


@dp.message_handler(commands="start")

async def cmd_start(message: types.Message):
    await message.answer("üëãüèª")
    await asyncio.sleep(1.0)
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
    await asyncio.sleep(0.5)
    await message.answer("–≠—Ç–æ ‚Äî¬†–ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç–º–∞–∑–æ–∫, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –±—ã—Å—Ç—Ä–æ –ø—Ä–∏–¥—É–º–∞—Ç—å –ø—Ä–∏—á–∏–Ω—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π —Ç–∞–∫ –∏–ª–∏ –∏–Ω–∞—á–µ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞–∫–æ–Ω—á–∏—Ç—å –¥–µ–ª–∞ –≤–æ–≤—Ä–µ–º—è.")
    await asyncio.sleep(0.5)
    await message.answer("–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ –∏–º—è —á–µ–ª–æ–≤–µ–∫–∞, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–∞ –æ—Ç–º–∞–∑–∫–∞:")

@dp.message_handler(commands="help")

async def cmd_help(message: types.Message):
    await message.answer("üöë")
    await asyncio.sleep(0.5)
    await message.answer("–°–∫–æ—Ä—É—é –ø–æ–º–æ—â—å –∑–∞–∫–∞–∑—ã–≤–∞–ª–∏?")
    await asyncio.sleep(0.3)
    await message.answer("–≠—Ç–æ ‚Äî –æ–±—ã—á–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç–º–∞–∑–æ–∫. –í—Ä—è–¥ –ª–∏ –ø–æ–º–æ—â—å —Ç—É—Ç –Ω—É–∂–Ω–∞, –Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –ø–∏—à–∏: @iamalleksy")

@dp.message_handler()
async def any_text_message(message: types.Message):
    excuseTextFore = f'{fmt.quote_html(message.text)}{getRandomExcuse()}'
    excuseText = excuseTextFore
    
    await message.answer(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–º–∞–∑–∫—É...')
    await asyncio.sleep(1)
    await message.answer(excuseText)
    await asyncio.sleep(1)
    await message.answer("–ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—Ç—Å—è –µ—â–µ –æ—Ç –∫–æ–≥–æ-—Ç–æ –æ—Ç–º–∞–∑–∞—Ç—å—Å—è ‚Äî –ø–∏—à–∏ –∏–º—è –º–Ω–µ, —è –ø—Ä–∏–¥—É–º–∞—é –æ—Ç–º–∞–∑–∫—É! –ï—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏ /help")

# async def cmd_start(message: types.Message):
#     keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     keyboard.add(*[types.KeyboardButton(word_but) for word_but in ['üá¨üáß English', 'üá∑üá∫ –†—É—Å—Å–∫–∏–π']])
#     await message.answer("üëãüèª")
#     await asyncio.sleep(1.0)
#     await message.answer("Please, choose language you prefer:", reply_markup=keyboard)

@dp.message_handler(Text(contains="–°–ø–∞—Å–∏–±–æ"))
async def with_puree(message: types.Message):
     await message.answe("Great! Nice to meet you!")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
